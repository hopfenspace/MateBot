name: Python3 Testing

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and setup the environment
      run: |
        sudo apt install python3-dev python3-venv default-libmysqlclient-dev build-essential -y
        python3 -m pip install --upgrade pip
        pip install flake8 pytest pylint build pymysql mysqlclient cryptography
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        sudo systemctl start mysql.service
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    - name: Lint with PyLint
      run: |
        pylint matebot_core/ -j 0 && echo "OK" || echo "FAIL"
    - name: Build docs using Sphinx
      run: |
        cd docs
        pip install -r requirements.txt
        make html
    - name: Run matebot_core unittests with temporary sqlite3
      run: |
        python3 -m unittest tests -v
    - name: Run matebot_core once
      run: |
        python3 -m matebot_core || echo "OK"
        rm config.json
    - name: Build the package
      run: |
        python3 -m build .
    - name: Install the package and execute it once
      run: |
        cd dist/
        python3 -m venv venv
        venv/bin/python3 -m pip install matebot_core-*.tar.gz
        mkdir cwd/ && cd cwd/
        ../venv/bin/python3 -m matebot_core || echo "OK"
        sed -i 's/sqlite:\\\/\\\//sqlite:\/\//g' config.json
        sed -i 's/sqlite:\/\//sqlite:\/\/\/test.db/g' config.json
        ../venv/bin/python3 -m matebot_core &
        sleep 1
        curl http://localhost:8000/
        wget http://localhost:8000/openapi.json --debug
